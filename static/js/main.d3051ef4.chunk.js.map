{"version":3,"sources":["assets/sm.png","components/speedometer.js","App.js","reportWebVitals.js","index.js"],"names":["Speedometer","canvasRef","useRef","contextRef","cw","ch","useState","al","diff","bar","useEffect","context","current","getContext","canvas","height","width","console","log","__proto__","setInterval","Math","PI","fillStyle","clearRect","beginPath","fill","strokeStyle","shadowBlur","shadowColor","textAlign","lineWidth","lineCap","font","arc","stroke","fillText","clearTimeout","style","background","position","left","transform","top","zIndex","src","gauge","borderRadius","border","borderBottom","borderRight","borderLeft","ref","id","color","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,MAA0B,+B,OCyH1BA,MAtHf,WACE,IAAIC,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MACpBE,EAAKF,iBAAO,MACZG,EAAKH,iBAAO,MAJK,EAKHI,mBAAS,GALN,mBAKhBC,EALgB,KAOjBC,GAPiB,KAOVN,iBAAO,OACdO,EAAMP,iBAAO,MAuDjB,OArDAQ,qBAAU,WA0CR,IACMC,EADSV,EAAUW,QACFC,WAAW,MAElCV,EAAWS,QAAUD,EACrBN,EAAGO,QAAUT,EAAWS,QAAQE,OAAOC,OAAS,EAChDX,EAAGQ,QAAUT,EAAWS,QAAQE,OAAOE,MAAQ,EAC/CC,QAAQC,IAAIf,EAAWS,QAAQO,WAE/BV,EAAIG,QAAUQ,aAjDd,WACEZ,EAAKI,QAAWL,EAAK,IAAOc,KAAKC,GAAK,KAEtCnB,EAAWS,QAAQW,UAAY,UAE/BpB,EAAWS,QAAQY,UAAU,EAAG,EAAG,IAAK,KACxCrB,EAAWS,QAAQa,YAEnBtB,EAAWS,QAAQc,OAEnBvB,EAAWS,QAAQe,YAAc,UACjCxB,EAAWS,QAAQgB,WAAa,GAChCzB,EAAWS,QAAQiB,YAAc,SACjC1B,EAAWS,QAAQkB,UAAY,SAC/B3B,EAAWS,QAAQmB,UAAY,GAC/B5B,EAAWS,QAAQoB,QAAU,QAC7B7B,EAAWS,QAAQW,UAAY,UAC/BpB,EAAWS,QAAQqB,KAAO,mBAC1B9B,EAAWS,QAAQa,YACnBtB,EAAWS,QAAQsB,IACjB9B,EAAGQ,QACHP,EAAGO,QAAU,GACb,KA3BM,KA6BNJ,EAAKI,SA7BC,MA8BN,GAEFT,EAAWS,QAAQuB,SACnBxB,EAAQY,UAAY,UACpBpB,EAAWS,QAAQgB,WAAa,EAChCzB,EAAWS,QAAQiB,YAAc,SACjC1B,EAAWS,QAAQwB,SAAS7B,EAAIH,EAAGQ,QAAU,GAAIP,EAAGO,QAAU,GAC9DD,EAAQsB,KAAO,eACftB,EAAQY,UAAY,UACpBZ,EAAQyB,SAAS,MAAOhC,EAAGQ,QAAU,GAAIP,EAAGO,SAExCL,GAAM,KACR8B,aAAa5B,EAAIG,SAEnBL,MAUqC,OACtC,CAACA,IAGF,sBACE+B,MAAO,CACLvB,OAAQ,QACRC,MAAO,OACPuB,WAAY,QACZC,SAAU,YALd,UAQE,qBACEF,MAAO,CACLE,SAAU,WACVzB,OAAQ,QACR0B,KAAM,MACNC,UAAW,mBACXC,IAAK,OACLC,OAAQ,KAEVC,IAAKC,IAEP,qBACER,MAAO,CACLE,SAAU,WACVzB,OAAQ,QACRC,MAAO,QACPyB,KAAM,MACNC,UAAW,mBACXC,IAAK,QACLI,aAAc,MACdC,OAAQ,kCACRT,WAAY,cACZU,aAAc,QACdC,YAAa,QACbC,WAAY,QACZP,OAAQ,OAGZ,wBACEQ,IAAKnD,EACLoD,GAAG,WACHrC,MAAM,MACND,OAAO,MACPuB,MAAO,CACLE,SAAU,WACVc,MAAO,QAEPb,KAAM,MACNC,UAAW,mBACXC,IAAK,WCrGAY,MATf,WACE,OACE,qBAAKC,UAAU,MAAf,SAEG,cAAC,EAAD,OCIQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d3051ef4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sm.728fd986.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport gauge from \"../assets/sm.png\";\r\n\r\nfunction Speedometer() {\r\n  var canvasRef = useRef(null);\r\n  var contextRef = useRef(null);\r\n  var cw = useRef(null);\r\n  var ch = useRef(null);\r\n  let [al, setal] = useState(0);\r\n  var start = -4.05;\r\n  var diff = useRef(null);\r\n  var bar = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function progressBar() {\r\n      diff.current = (al / 220) * Math.PI * 1.57;\r\n\r\n      contextRef.current.fillStyle = \"#f3f3f3\";\r\n\r\n      contextRef.current.clearRect(0, 0, 600, 500);\r\n      contextRef.current.beginPath();\r\n\r\n      contextRef.current.fill();\r\n\r\n      contextRef.current.strokeStyle = \"#b3cf3c\";\r\n      contextRef.current.shadowBlur = 20;\r\n      contextRef.current.shadowColor = \"yellow\";\r\n      contextRef.current.textAlign = \"center\";\r\n      contextRef.current.lineWidth = 10;\r\n      contextRef.current.lineCap = \"round\";\r\n      contextRef.current.fillStyle = \"#000000\";\r\n      contextRef.current.font = \"bold 60px Roboto\";\r\n      contextRef.current.beginPath();\r\n      contextRef.current.arc(\r\n        cw.current,\r\n        ch.current + 10,\r\n        210,\r\n        start,\r\n        diff.current + start,\r\n        false\r\n      );\r\n      contextRef.current.stroke();\r\n      context.fillStyle = \"#ffffff\";\r\n      contextRef.current.shadowBlur = 0;\r\n      contextRef.current.shadowColor = \"yellow\";\r\n      contextRef.current.fillText(al, cw.current - 10, ch.current + 6);\r\n      context.font = \"10pt Verdana\";\r\n      context.fillStyle = \"#AC793B\";\r\n      context.fillText(\"kmh\", cw.current + 72, ch.current);\r\n\r\n      if (al >= 220) {\r\n        clearTimeout(bar.current);\r\n      }\r\n      al++;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    contextRef.current = context;\r\n    ch.current = contextRef.current.canvas.height / 2;\r\n    cw.current = contextRef.current.canvas.width / 2;\r\n    console.log(contextRef.current.__proto__);\r\n\r\n    bar.current = setInterval(progressBar, 1000);\r\n  }, [al]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        background: \"black\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <img\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"400px\",\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n          top: \"60px\",\r\n          zIndex: \"0\",\r\n        }}\r\n        src={gauge}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          height: \"200px\",\r\n          width: \"200px\",\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n          top: \"150px\",\r\n          borderRadius: \"50%\",\r\n          border: \"1px solid rgba(255,255,255,0.6)\",\r\n          background: \"transparent\",\r\n          borderBottom: \"black\",\r\n          borderRight: \"black\",\r\n          borderLeft: \"black\",\r\n          zIndex: 100,\r\n        }}\r\n      ></div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        id=\"myCanvas\"\r\n        width=\"500\"\r\n        height=\"500\"\r\n        style={{\r\n          position: \"absolute\",\r\n          color: \"white\",\r\n\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n          top: \"0\",\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Speedometer;\r\n","\nimport './App.css';\nimport Speedometer from './components/speedometer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n       <Speedometer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}